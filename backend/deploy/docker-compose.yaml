version: '3.9'

services:
  postgres:
    image: postgres:14.8-alpine3.18
    hostname: postgres
    container_name: calendar_postgres_container
    ports:
      - 5435:5432
    volumes:
      - calend_pgdata:/var/lib/postgresql/data/pgdata
      - ../migrations/psql:/docker-entrypoint-initdb.d
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: /var/lib/postgresql/data/pgdata
    restart: unless-stopped
    networks:
      - servicenet
  mongodb:
    image: mongo:6.0
    container_name: calendar_mongo_container
    restart: unless-stopped
    hostname: mongodb
    ports:
      - 27017:27017
    volumes:
      - calend_mongodata:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASS}
    networks:
      - servicenet
  minio:
    image: minio/minio:latest
    hostname: minio
    container_name: calendar_minio_container
    ports:
      - 9090:9000
      - 9091:9091
    volumes:
      - calend_minio_data:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_PASS}
    restart: unless-stopped
    command: server /data --console-address ":9091"
    networks:
      - servicenet
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: calendar_rabbit_container
    hostname: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
    volumes:
      - calend_rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped
    networks:
      - servicenet
    command:
      - bash
      - -c
      - |
        apt-get update && \
        apt-get install -y curl && \
        rabbitmq-plugins enable rabbitmq_management --offline && \
        curl -L https://github.com/rabbitmq/rabbitmq-delayed-message-exchange/releases/download/v3.12.0/rabbitmq_delayed_message_exchange-3.12.0.ez \
          -o /plugins/rabbitmq_delayed_message_exchange-3.12.0.ez && \
        rabbitmq-plugins enable --offline rabbitmq_delayed_message_exchange && \
        rabbitmq-server
  api:
    container_name: api_container
    image: calend/api
    restart: always
    environment:
      WAIT_HOSTS: postgres:5432, mongodb:27017, rabbitmq:5672
    depends_on:
      - rabbitmq
      - minio
      - mongodb
      - postgres
    build: 
      context: ../
      dockerfile: deploy/api/DockerFile
    networks:
      - servicenet
    ports:
      - 8080:8080
  notifier:
    container_name: notifier_container
    image: calend/notifier
    restart: always
    environment:
      WAIT_HOSTS: rabbitmq:5672
    depends_on:
      - rabbitmq
    build: 
      context: ../
      dockerfile: deploy/notifier/DockerFile
    networks:
      - servicenet
volumes:
  calend_pgdata:
  calend_mongodata:
  calend_minio_data:
  calend_rabbitmq_data:

networks:
  servicenet: